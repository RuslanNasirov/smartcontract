pragma solidity ^0.5.1;
contract Banking {
    address owner; /*«десь контракт запоминает адрес пользовател€, создавшего этот смарт-контракт.*/ 
    mapping(address => uint) balances; /*динамическа€ структура, котора€ сохран€ет в себе соответстви€ между адресами пользователей и балансами.*/ 
    
    function Bank() public { /* функци€ Ѕанк, здесь происходит присвоение переменной owner адреса того, кто разместил этот смарт-контракт в сети */
        owner = msg.sender; 
    }

    function deposit() public payable { 
        balances[msg.sender] += msg.value; /* ћетод deposit позвол€ет передать транзакцией определенное количество монет на аккаунт контракта. 
        ¬ данном случае смарт-контракт, получа€ эти монеты, оставл€ет их у себ€ на балансе, но в структуру balances записывает, кто именно был отправителем этих монет, чтобы знать, кому они принадлежат.*/
    }

    function withdraw(uint amount) public { /* метод withdraw принимает один параметр Ч ту сумму монет, которую кто-то хочет вывести из этого банка.
    «десь идет проверка, достаточно ли монет на балансе пользовател€, который вызывает этот метод, чтобы их отправить. 
    ≈сли их достаточно, тогда сам смарт-контракт возвращает вызывающему это количество монет.*/
        if (balances[msg.sender] >= amount) {
            balances[msg.sender] -= amount;
            msg.sender.transfer(amount); 
        }
    }

    function getMyBalance() public view returns(uint) { /* метод проверки текущего баланса пользовател€. “от, кто вызывает этот метод, будет использоватьс€ дл€ получени€ этого баланса в смарт-контракте. */
        return balances[msg.sender];
    }

    function kill() public { /* ћетод kill нужен дл€ того, чтобы уничтожить состо€ние смарт-контракта. » тут прописана дополнительна€ проверка, €вл€етс€ ли вызывающий этого метода владельцем этого контракта.
    ≈сли €вл€етс€, тогда контракт самоуничтожаетс€, а функци€ уничтожени€ принимает один параметр Ч идентификатор аккаунта, на который контракт отправит все монеты, оставшиес€ на его балансе.
    ¬ данном случае оставшиес€ монеты автоматически уйдут на адрес владельца контракта.*/
        if (msg.sender == owner)
            selfdestruct(msg.sender);
    }
}